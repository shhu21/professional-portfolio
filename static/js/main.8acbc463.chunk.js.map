{"version":3,"sources":["assets/data/resumeList.js","assets/images sync /^/.//.*/.png$","assets/data/projectList.js","assets/data/profileList.js","assets/images/profile.jpeg","assets/images/CampusMate (Android).png","assets/images/CampusMate (IOS).png","assets/images/Instagram Image Gallery.png","assets/images/Portfolio.png","assets/images/Pwd Generator.png","assets/images/Scheduler.png","assets/images/Team Profile Generator.png","assets/images/Trip Planner.png","assets/images/Weather Dashboard.png","assets/images/Wine Blogger.png","assets/images/background.png","components/Nav/index.js","utils/helpers.js","components/Header/index.js","components/About/index.js","components/Modal/index.js","components/Project/index.js","components/Portfolio/index.js","components/Contact/index.js","components/ExperienceItem/index.js","components/Resume/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","experienceList","company","title","date","location","description","website","languageList","technologyList","awardsList","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","project","languages","github","link","src","NavItem","contactSelected","setContactSelected","Nav","className","activeKey","tab","Item","Link","eventKey","href","onClick","string","charAt","toUpperCase","slice","Header","Container","Row","Col","xs","md","About","alt","require","class","InfoModal","onClose","Modal","show","size","aria-labelledby","centered","Body","Button","Project","useState","isModalOpen","setIsModalOpen","toggleModal","Portfolio","projects","proj","key","ContactForm","invalidEmail","setErrorEmail","invalidName","setErrorName","name","email","message","formState","setFormState","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","type","placeholder","defaultValue","onChange","autoomplete","autocomplete","rows","data-testid","ExperienceItem","Card","Subtitle","Title","Text","desc","Resume","download","ListGroup","variant","language","tech","ex","award","Footer","profileList","profile","App","ProjectList","about","contact","Contact","portfolio","resume","ProfileList","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8acbc463.chunk.js","sourcesContent":["const experienceList = [\n    {\n        company: 'CampusMate',\n        title: 'Co-Founder',\n        date: 'June \\'17-August \\'18',\n        location: 'Riverside, CA',\n        description: [\n            'Compiled various valuable web views for facilitated access',\n            'Implemented user interface scaling across multiple devices and screen sizes',\n            'Utilized a Google Maps API to allow students to quickly view the school campus and find their destination',\n            'Created records of key building hours including service buildings and dining in concise dropdown lists',\n            'Generated an auto-dial campus police and campus escort services at the touch of a button ',\n            'Simplified coordination between users by allowing users to send class schedules to each other',\n            'Auto-populated and authenticated a user into his/her school portal to avoid repetitive manual authentications',\n            ],\n        website: 'https://play.google.com/store/apps/details?id=com.mycampusmate.rmate'\n    },\n    {\n        company: 'REDSHIFT Digital',\n        title: 'Front-End Engineer Intern',\n        date: 'June \\'16-August \\'16',\n        location: 'San Francisco, CA',\n        description: [\n            'Created and ran tests to check logic and functionality of code to ensure expected performance before branch merges',\n            'Collaborated with other team members to create corresponding code in HTML, React, Javascript, etc. for website page mock-ups',\n            'Connected API’s and mapped raw data into required data formats to create plot.ly maps for data representation',\n            'Fixed code issues, such as adding gradients to specific data points on maps, jump-scrolling on a webpage, etc.'\n            ],\n        website: 'https://redshiftdigital.com/'\n    },\n    {\n        company: 'Centric Digital',\n        title: 'Product and Experience Intern',\n        date: 'June \\'15-August \\'15',\n        location: 'San Francisco, CA',\n        description: [\n            'Identified, compiled, and organized market data to identify leading candidates to improved existing products',\n            'Defined target user personas',\n            'Generated and refined research to improve product user experience',\n            'Compiled, presented, and communicated relevant applicable information and distributed them to other related teams',\n            'Created and analyzed conference meeting transcripts to manage product progress'\n            ],\n        website: 'https://centricdigital.com/'\n    }\n];\n\nconst languageList = [\n    'C++',\n    'JavaScript',\n    'Python',\n    'HTML',\n    'CSS',\n    'JQuery',\n    'Swift',\n    'Java',\n    'XML',\n    'MySQL',\n    'Clojure',\n    'Node.js',\n    'React',\n    'Jade',\n    'MongoDB',\n    'Express.js',\n    'Jest'\n];\n\nconst technologyList = [\n    'IOS Mobile App Development',\n    'Android Mobile App Development',\n    'Word Document',\n    'Excel Spreadsheet'\n];\n\nconst awardsList = [\n    'Association for Computing Machinery (ACM)',\n    'Cross Campus Entrepreneurs',\n    'HKN (IEEE Honor Society)'\n]\n\nmodule.exports = { experienceList, languageList, technologyList, awardsList };","var map = {\n\t\"./CampusMate (Android).png\": 49,\n\t\"./CampusMate (IOS).png\": 50,\n\t\"./Instagram Image Gallery.png\": 51,\n\t\"./Portfolio.png\": 52,\n\t\"./Pwd Generator.png\": 53,\n\t\"./Scheduler.png\": 54,\n\t\"./Team Profile Generator.png\": 55,\n\t\"./Trip Planner.png\": 56,\n\t\"./Weather Dashboard.png\": 57,\n\t\"./Wine Blogger.png\": 58,\n\t\"./background.png\": 59\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","// TODO: add the rest of the projects\n\nconst projectList = [\n  {\n    project: 'CampusMate (IOS)',\n    languages: 'Swift, Google Maps API',\n    description: 'An IOS mobile application that allows students at the University of California, Riverside to view all their student needs such as dining, building information, maps using Google Maps API, and their student portal.',\n    github: 'https://github.com/shu012/UCR-Student-Toolbox',\n    website: ''\n  },\n  {\n    project: 'CampusMate (Android)',\n    languages: 'Java, Google Maps API',\n    description: 'An Android mobile application that allows students at the University of California, Riverside to view all their student needs such as dining, building information, maps using Google Maps API, and their student portal.',\n    github: 'https://github.com/TheLuckyOwl/CS180-Project',\n    website: 'https://play.google.com/store/apps/details?id=com.mycampusmate.rmate'\n  },\n  {\n    project: 'Instagram Image Gallery',\n    languages: 'React.js, Instagram API',\n    description: 'An image gallery using Instagram\\'s open API.  After a user logs in using their Instagram credidentials they will be able to view all their uploaded images or images that the user has \"liked\".',\n    github: 'https://github.com/shu012/ig-api-practice/',\n    website: ''\n  },\n  // {\n  //   project: 'Social Network',\n  //   languages: 'Node.js, Mongoose, MongoDB',\n  //   description: 'An API for a social network using Mongoose and MongoDB',\n  //   github: 'https://github.com/shhu21/social-network/',\n  //   website: 'https://drive.google.com/file/d/1t0IS646JWAvGIOOtaXXDgrg4Bi5fNj8g/view'\n  // },\n  { \n    project: 'Wine Blogger',\n    languages: 'Node.js, mySQL, Sequalize, HandleBars, AWS S3 Bucket',\n    description: 'A wine blog that allows users to post about wine and connect with other wine enthusists, while helping the user to keep track of their own wine inventory.',\n    github: 'https://github.com/anitapeppercorn/wine-blogger/',\n    website: 'https://secure-chambber-23014.herokuapp.com/'\n  },\n  {\n    project: 'Trip Planner',\n    languages: 'Node.js, HTML',\n    description: 'A trip planner that allows the user to search a location for places of food or entertainment using Yelp\\'s open API.  These places can then be saved to a created trip for later viewing and/or editing.  A weather dashboard is, also, included to check weather forecasts.',\n    github: 'https://github.com/christian-vauris/trip-planner/',\n    website: 'https://christian-vauris.github.io/trip-planner/'\n  },\n  // TODO: add employee tracker data\n  // {\n  //   project: 'Employee Tracker',\n  //   languages: 'JavaScript, Inquirer',\n  //   description: 'A CLI that creates a team profile HTML page using user input.',\n  //   github: 'https://github.com/shhu21/team-profile-generator/',\n  //   website: 'https://drive.google.com/file/d/1wux0nQVLEylJsVU_1pI9jXsRLA40OCRK/view'\n  // },\n  // {\n  //   project: 'Team Profile Generator',\n  //   languages: 'JavaScript, Inquirer',\n  //   description: 'A CLI that creates a team profile HTML page using user input.',\n  //   github: 'https://github.com/shhu21/team-profile-generator/',\n  //   website: 'https://drive.google.com/file/d/1wux0nQVLEylJsVU_1pI9jXsRLA40OCRK/view'\n  // },\n  // {\n  //   project: 'Timed Quiz',\n  //   languages: 'JavaScript, HTML',\n  //   description: 'A timed coding quiz.',\n  //   github: 'https://github.com/shhu21/timed-quiz/',\n  //   website: 'https://shhu21.github.io/timed-quiz/'\n  // },\n  {\n    project: 'Weather Dashboard',\n    languages: 'JavaScript, HTML',\n    description: 'A weather dashboard that allows the user to search by a search and see the current weather information and a 5-day forecast projection.',\n    github: 'https://github.com/shhu21/weather-dashboard/',\n    website: 'https://shhu21.github.io/weather-dashboard/'\n  },\n  {\n    project: 'Portfolio',\n    languages: 'JavaScript, HTNL',\n    description: 'A basic work portfolio.',\n    github: 'https://github.com/shhu21/portfolio',\n    website: ' https://shhu21.github.io/portfolio/'\n  },\n  {\n    project: 'Pwd Generator',\n    languages: 'JavaScript',\n    description: 'A generator to create a randomized password based on a user\\'s choice of special characters and length.',\n    github: 'https://github.com/shhu21/pwd-generator/',\n    website: ' https://shhu21.github.io/pwd-generator/'\n  },\n  {\n    project: 'Scheduler',\n    languages: 'JavaScript, HTML',\n    description: 'A day scheduler.',\n    github: 'https://github.com/shhu21/scheduler/',\n    website: 'https://shhu21.github.io/scheduler/'\n  }\n];\n\nmodule.exports = projectList;","const profileList = [\n    {\n        title: 'GitHub',\n        link: 'https://github.com/shhu21/',\n        src: 'https://img.icons8.com/material-rounded/48/000000/github.png'\n    },\n    {\n        title: 'GitHub',\n        link: 'https://github.com/shu012/',\n        src: 'https://img.icons8.com/material/48/000000/github.png'\n    },\n    {\n        title: 'LinkedIn',\n        link: 'https://www.linkedin.com/in/sara-hu-12394311b/',\n        src: 'https://img.icons8.com/fluent-systems-regular/48/000000/linkedin.png'\n    }\n];\n\nmodule.exports = profileList;","module.exports = __webpack_public_path__ + \"static/media/profile.6de530c6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/CampusMate (Android).4637554c.png\";","module.exports = __webpack_public_path__ + \"static/media/CampusMate (IOS).ea09985b.png\";","module.exports = __webpack_public_path__ + \"static/media/Instagram Image Gallery.87814ee2.png\";","module.exports = __webpack_public_path__ + \"static/media/Portfolio.482a0534.png\";","module.exports = __webpack_public_path__ + \"static/media/Pwd Generator.156205b9.png\";","module.exports = __webpack_public_path__ + \"static/media/Scheduler.aff65d5d.png\";","module.exports = __webpack_public_path__ + \"static/media/Team Profile Generator.e614c1ff.png\";","module.exports = __webpack_public_path__ + \"static/media/Trip Planner.03f8f05a.png\";","module.exports = __webpack_public_path__ + \"static/media/Weather Dashboard.4972b0cf.png\";","module.exports = __webpack_public_path__ + \"static/media/Wine Blogger.e869fc8c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.0a55d602.png\";","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction NavItem({contactSelected, setContactSelected}) {\n    const tabs = ['about', 'portfolio', 'contact', 'resume'];\n\n    return (\n        <Nav className=\"justify-content-end\" activeKey=\"/home\">\n            {tabs.map(tab => (\n                <Nav.Item>\n                    <Nav.Link \n                        eventKey={tab}\n                        href={'#' + tab}\n                        onClick={() => setContactSelected(tab)}\n                        className={\n                        contactSelected === tab ? 'nav-link active' : 'nav-link'\n                        }>\n                        {capitalizeFirstLetter(tab)}\n                    </Nav.Link>\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n}\n\nexport default NavItem;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from 'react'; \nimport Nav from '../Nav';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Header({contactSelected, setContactSelected}) {\n    return (\n        <header>\n            <Container>\n                <Row>\n                    <Col xs={12} md={4}>\n                        <h1>Sara Hu</h1>\n                    </Col>\n                    <Col xs={12} md={8}>\n                        <Nav\n                            contactSelected={contactSelected}\n                            setContactSelected={setContactSelected}\n                        ></Nav>\n                    </Col>\n                </Row>\n            </Container>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react'; \nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction About() {\n    return (\n        <section className=\"my-5\">\n            <h1 className='section-title' id='about'>About Me</h1>\n            <Container>\n                <Row>\n                    <Col xs={12} md={6}>\n                        <img className='profile' alt='profile' src={require(`../../assets/images/profile.jpeg`)}></img> \n                    </Col>\n                    <Col xs={12} md={6}>\n                        <div class=\"animated-title\">\n                            <div class=\"text-top\">\n                                <div>\n                                <span>Hello,</span>\n                                <span>I'm Sara Hu.</span>\n                                </div>\n                            </div>\n                            <div class=\"text-bottom\">\n                                <div>\n                                    <span>Front-End Developer,</span>\n                                    <span>Art Hobbist,</span>\n                                    <span>and</span>\n                                    <span>Animal Enthusiast.</span>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    );\n}\n\nexport default About;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst InfoModal = ({ onClose, project, languages, description }) => {\n    return (\n        <Modal\n            className='modal'\n            show={onClose}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n        <Modal.Body className='modal-container'>\n            <Container>\n                <Row>\n                    <Col><img className='modal-img' src={require(`../../assets/images/${project}.png`)} alt=\"current category\" /></Col>\n                    <Col className='modal-desc'>\n                        <h2>{project}</h2>\n                        <h3 className='project-subtitle'>Languages:</h3>\n                        <p>{languages}</p>\n                        <p>{description}</p>\n                        <Button className='modal-btn' onClick={onClose}>Close</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </Modal.Body>\n    </Modal>\n    );\n}\n\nexport default InfoModal;","import React, { useState } from 'react';\nimport InfoModal from '../Modal';\nimport Image from 'react-bootstrap/Image';\n\nfunction Project({project, languages, description}) {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const toggleModal = () => {\n        setIsModalOpen(!isModalOpen);\n    }\n\n    return (\n        <section>\n            <div className=\"project\" onClick={toggleModal} >\n                <img src={require(`../../assets/images/${project}.png`)}  alt={project} className=\"project-img\"/>\n                <div className=\"overlay project-title\">\n                    <h3 className='text'>{project} <span>({languages})</span></h3>\n                </div>\n            </div>\n            {isModalOpen && (\n                <InfoModal onClose={toggleModal} project={project} languages={languages} description={description} />\n            )}\n        </section>\n    );\n}\n\nexport default Project;","import React, { useState } from 'react';\nimport Project from '../Project';\n\nconst Portfolio = ({projects}) => {\n  return (\n    <section>\n      <h1 className='section-title'>Projects</h1>\n      <div className='flex-container'>\n        {projects.map((proj) => (\n          <Project \n            key={proj.project} \n            project={proj.project}\n            languages={proj.languages}\n            description={proj.description} \n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n    const [invalidEmail, setErrorEmail] = useState('');\n    const [invalidName, setErrorName] = useState('');\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            \n            // isValid conditional statement\n            if (!isValid) {\n                setErrorEmail('Invalid email!');\n            } else {\n                if (!e.target.value.length) {\n                  setErrorEmail(`${e.target.name} is required.`);\n                } else {\n                  setErrorEmail('');\n                }\n            }\n        }\n        else if(e.target.name === 'name')  {\n            if(invalidName === 'Please enter your name. (Required)' && e.target.value) {\n                setErrorName('');\n                setFormState({ ...formState, [e.target.email]: e.target.value });\n            }\n        }\n\n        if (!invalidEmail) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n        \n        if(!formState.name) {\n            setErrorName('Please enter your name. (Required)');\n        }\n\n        if(!formState.email) {\n            setErrorEmail('Please enter your email. (Required)');\n        }\n    }\n\n    return (\n        <section className='contact-section'>\n            <h1 className='section-title' id='contact-title'>Contact Me</h1>\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n                <div className='tooltip'>\n                    <label htmlFor=\"name\">Name:\n                    {invalidName && (\n                            <div>\n                                <p className=\"error-text\">{invalidName}</p>\n                            </div>\n                        )}</label>\n                    <input type=\"text\" placeholder='Name' defaultValue={name} onChange={handleChange} name=\"name\" autoomplete=\"off\" />\n                    <span class=\"tooltiptext\">Required.</span>\n                </div>\n                <div className='tooltip'>\n                    <label htmlFor=\"email\">Email address:\n                        {invalidEmail && (\n                            <div>\n                                <p className=\"error-text\">{invalidEmail}</p>\n                            </div>\n                        )}</label>\n                    <input type=\"email\" placeholder='Email' defaultValue={email} name=\"email\" onChange={handleChange} autocomplete=\"off\" />\n                    <span class=\"tooltiptext\">Required.</span>\n                </div>\n                <div>\n                    <label htmlFor=\"message\">Message:</label>\n                    <textarea name=\"message\" defaultValue={message} onChange={handleChange} rows=\"5\" />\n                </div>\n                <button data-testid=\"submit\" type=\"submit\">Submit</button>\n            </form>\n        </section>\n    );\n}\nexport default ContactForm;","import React from 'react'; \nimport Card from 'react-bootstrap/Card';\n\nfunction ExperienceItem({company, title, date, description, website}) {\n    return(\n        <Card>\n            <Card.Body>\n                <Card.Subtitle className=\"mb-2 text-muted company-title\">{date}</Card.Subtitle>\n                <Card.Title className='company-title'>{company}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted company-title\">{title}</Card.Subtitle>\n                <Card.Text>\n                    <ul>\n                        {description.map((desc) => (\n                            <li>{desc}</li>\n                        ))}\n                    </ul>\n                </Card.Text>\n                <Card.Link href={website} target='_blank'>Company Website</Card.Link>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ExperienceItem;","import React from 'react'; \nimport ExperienceItem from '../ExperienceItem';\nimport { experienceList, languageList, technologyList, awardsList } from '../../assets/data/resumeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nfunction Resume() {\n    return (\n        <div>\n            <div className='resume-dl'>\n                <h4>Download:</h4>\n                <a href='../../files/Resume.doc' download><Button>Doc</Button></a>\n                <a href='../../files/Resume.pdf' download><Button>PDF</Button></a>\n            </div>\n            <Container className='resume-container'> \n                <Row>\n                    <Col xs={12} md={8}>\n                        <h2 className='resume-section'>PROFILE</h2>\n                        <h3 className='resume-subtitle'>FULL NAME</h3>\n                        <p>Sara Haeryun Hu</p>\n                        <div className='education'>\n                            <h3 className='resume-subtitle'>EDUCATION</h3>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <p>2014-2018</p>\n                                        </Col>\n                                        <Col>\n                                            <p>University of California, Riverside</p>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h5>Computer Science with Business Applications</h5>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h5>Bachelor's of Science</h5>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                <Container>\n                                <Row>\n                                    <Col>\n                                        <p>2010-2014</p>\n                                    </Col>\n                                    <Col>\n                                        <p>Homestead High School</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h5>High School Diploma</h5>\n                                    </Col>\n                                </Row>\n                            </Container>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </div>\n                        <div className='contact-info'>\n                            <h3 className='resume-subtitle'>CONTACT</h3>\n                            <a href = \"mailto: hu.sara21@gmail.com\">hu.sara21@gmail.com</a>\n                            <a href=\"tel:+1-650-823-3319\">+1-650-823-3319</a>\n                        </div>\n                    </Col>\n                    <Col xs={12} md={4}>\n                        <h2 className='resume-section'>SKILLS</h2>\n                        <h3 className='resume-subtitle'>LANGUAGES</h3>\n                        <ul>\n                            {languageList.map((language) => (\n                                <li>{language}</li>\n                            ))}\n                        </ul>\n                        <h3 className='resume-subtitle'>ADDITIONAL TECHNOLOGIES</h3>\n                        <ul>\n                            {technologyList.map((tech) => (\n                                <li>{tech}</li>\n                            ))}\n                        </ul>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <h2 className='resume-section'>EXPERIENCE</h2>\n                        <ListGroup variant=\"flush\">\n                            {experienceList.map((ex) => (\n                                <ExperienceItem \n                                    key={ex.company} \n                                    company={ex.company}\n                                    title={ex.title}\n                                    date={ex.date}\n                                    location={ex.location}\n                                    description={ex.description}\n                                    website={ex.website}\n                                />\n                            ))}\n                        </ListGroup>\n                    </Col>\n                </Row>\n \n                <Row>\n                    <Col>\n                        <h2 className='resume-section'>AWARDS AND ACHIEVEMENTS</h2>\n                        <ul>\n                            {awardsList.map((award) => (\n                                <li>{award}</li>\n                            ))}\n                        </ul>\n                    </Col>\n                </Row>\n                </Container>\n        </div>\n    );\n}\n\nexport default Resume;","import React from 'react'; \n\nfunction Footer({profileList}) {\n    return (\n        <footer className=\"my-5\">\n            {profileList.map(profile => (\n                <a href={profile.link}>\n                    <img className='icon' alt={profile.title} src={profile.src}/>\n                </a>    \n            ))}\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport ContactForm from './components/Contact';\nimport Resume from './components/Resume';\nimport Footer from './components/Footer';\nimport ProjectList from './assets/data/projectList';\nimport ProfileList from './assets/data/profileList';\n\nfunction App() {\n  const [contactSelected, setContactSelected] = useState('about');\n  const [projects] = useState(ProjectList);\n\n  return (\n    <div className='main'>\n      <Header\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      />\n      <main>\n        {\n          {\n            about: <About/>,\n            contact: <ContactForm/>,\n            portfolio: <Portfolio projects={projects}/>,\n            resume: <Resume/>,\n          }[contactSelected]\n        }\n      </main>\n      <Footer profileList={ProfileList}/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}